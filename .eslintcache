[{"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\index.js":"1","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\App.js":"2","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\pages\\Home.js":"3","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\pages\\Login.js":"4","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\pages\\Register.js":"5","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\NavBar.js":"6","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\auth.js":"7","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\TodoIt.js":"8","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\ProtectedRoute.js":"9","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\AddTask.js":"10","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\TaskList.js":"11","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\task.js":"12"},{"size":754,"mtime":1610055626867,"results":"13","hashOfConfig":"14"},{"size":1017,"mtime":1610064113023,"results":"15","hashOfConfig":"14"},{"size":1056,"mtime":1609962916685,"results":"16","hashOfConfig":"14"},{"size":5511,"mtime":1611091933484,"results":"17","hashOfConfig":"14"},{"size":5617,"mtime":1611091933485,"results":"18","hashOfConfig":"14"},{"size":1092,"mtime":1609964201313,"results":"19","hashOfConfig":"14"},{"size":2726,"mtime":1611091933427,"results":"20","hashOfConfig":"14"},{"size":1340,"mtime":1611091933463,"results":"21","hashOfConfig":"14"},{"size":824,"mtime":1611091933413,"results":"22","hashOfConfig":"14"},{"size":1683,"mtime":1611091933440,"results":"23","hashOfConfig":"14"},{"size":4097,"mtime":1611091933453,"results":"24","hashOfConfig":"14"},{"size":2601,"mtime":1611091933474,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gia2l9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\index.js",[],["52","53"],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\App.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\pages\\Home.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\pages\\Login.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\pages\\Register.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\NavBar.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\auth.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\TodoIt.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\AddTask.js",[],"C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\TaskList.js",["54"],"import React, { useEffect, useCallback } from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  heading: {\r\n    marginTop: '2em'\r\n  }\r\n}))\r\n\r\nexport default function CheckboxList(props) {\r\n  const classes = useStyles()\r\n  const { task, setTasksHandler } = props\r\n  const [checked, setChecked] = React.useState([])\r\n  const [isLoading, setIsLoading] = React.useState()\r\n\r\n  // Memoize the GET /todo request since it is used in useEffect.\r\n  const getData = useCallback(() => {\r\n    // Request started.\r\n    setIsLoading(true)\r\n\r\n    // Retrieve the TODOits - GET /todo.\r\n    task.get(data => {\r\n      if (data == null) {\r\n        setIsLoading(false)\r\n        return\r\n      }\r\n\r\n      // Update the TODOits list on screen.\r\n      setTasksHandler(data.map((item, key) => {\r\n        return {\r\n          completed: item.completed,\r\n          body: item.body,\r\n          date: item.date,\r\n          id: item.id,\r\n          key: key,\r\n          author: item.author\r\n        }\r\n      }))\r\n\r\n      // Request has completed.\r\n      setIsLoading(false)\r\n    })\r\n  }, [setTasksHandler, setIsLoading, task])\r\n\r\n  // Load the data everytime the component is mounted.\r\n  useEffect(() => {\r\n    getData()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  // Checkbox toggle button state logic.\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value)\r\n    const newChecked = [...checked]\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value)\r\n    } else {\r\n      newChecked.splice(currentIndex, 1)\r\n    }\r\n\r\n    setChecked(newChecked)\r\n  }\r\n\r\n  /**\r\n   * Delete the TODOit.\r\n   * @param {String} The OBJECT_ID for the task in MongoDB.\r\n   */\r\n  function deleteTask (id) {\r\n    props.task.delete(id, (data) => {\r\n      getData()\r\n    })\r\n  }\r\n\r\n  // No TODOits to show.\r\n  console.log('props.tasks list', props.tasks)\r\n  if (props.tasks == null || props.tasks.length === 0) {\r\n    return (\r\n      <>\r\n        <Typography className={classes.heading} variant=\"body1\">\r\n          Whoops, you're out!\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\">\r\n          Perhaps it's time to create more TODOits.\r\n        </Typography>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {props.tasks.map((value) => {\r\n        const labelId = `checkbox-list-label-${value.key}`\r\n\r\n        return (\r\n          <ListItem\r\n            alignItems='center'\r\n            button\r\n            dense\r\n            key={value.key}\r\n            onClick={handleToggle(value.key)}\r\n            role={undefined}\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(value.key) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemIcon>\r\n\r\n            <ListItemText id={labelId} primary={`${value.body}`} />\r\n\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                aria-label=\"comments\"\r\n                edge=\"end\"\r\n                disabled={isLoading}\r\n                onClick={() => { deleteTask(value.id) }}\r\n              >\r\n                <DeleteForeverIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )\r\n      })}\r\n    </List>\r\n  )\r\n}\r\n","C:\\Users\\lanzo\\Documents\\GitHub\\todo-multi-tenant\\src\\components\\todoit\\task.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":49,"column":6,"nodeType":"61","endLine":49,"endColumn":20,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [getData, setIsLoading]",{"range":"68","text":"69"},[1575,1589],"[getData, setIsLoading]"]